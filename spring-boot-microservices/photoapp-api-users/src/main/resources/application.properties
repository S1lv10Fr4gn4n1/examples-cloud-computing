# basic set up
server.port = ${PORT:0}
spring.application.name = users-ws
spring.devtools.restart.enabled = true

# Eureka discovery setup
eureka.client.serviceUrl.defaultZone = http://${EUREKA_SERVER:localhost}:8010/eureka
eureka.instance.instance-id = ${spring.application.name}:${spring.application.instance_id:${random.value}}

# database connection set up
spring.datasource.url = jdbc:mysql://${DATABASE_HOST:localhost}:3306/photo_app?serverTimezone=UTC
spring.datasource.username = users-ws
# spring.datasource.password = {cipher}7cbe869dbed1a3c1ba4d8e51a87e2c1390a1a1893a5cfe012841e2cc8abc3467
# spring.datasource.password = test123
spring.jpa.hibernate.ddl-auto = update

gateway.ip = ${GATEWAY_HOST:192.168.0.183}
token.expiration_time = 864000000
# token.secret = {cipher}93b2945b8042224dd1d8b2582ac171aa25f33cd2a8e85c62beef57ed0ee4636831e1decbbcacdfa045fb4698759b646b
login.url.path = /users/login

# Rabbitmq connection setup
spring.rabbitmq.host = ${RABBITMQ_HOST:localhost}
spring.rabbitmq.port = 5672
# spring.rabbitmq.username = guest
# spring.rabbitmq.password = {cipher}207a9583bc595fed75be711d27d38f3000e33392a4ae7e28f0d1ab3a38068699

# actuator setup
management.endpoints.web.exposure.include = health

# Feign client logger
logging.level.com.sfs.photoapp.api.users.data.feignclient.AlbumsServiceClient = DEBUG

# enables circuit breaker
feign.hystrix.enabled = true

# messages
albums.exceptions.albums-not-found = Users albums are not found

# sleuth and zipkin configuration
spring.zipkin.service.name = ${spring.application.name}
spring.zipkin.baseUrl = http://${ZIPKIN_HOST:localhost}:9411
spring.zipkin.sender.type = web
spring.sleuth.sampler.probability = 1

# setup log's output
logging.file = ./logs/${spring.application.name}-${CONTAINER_ID:dev}.log

myApplication.environment = Default Profile