version: '3.4'

services:
  zookeeper:
    image: zookeeper:3.7.0
    hostname: zookeeper
    # restart: always
    configs:
    - source: zoo.cfg
      target: /conf/zoo.cfg
    volumes:
    - zookeeper-data:/tmp/zookeeper
    ports:
    - 2181:2181
    networks:
    - message-broker-network
    environment:
      ZOO_MY_ID: 1
      ALLOW_ANONYMOUS_LOGIN: "yes"
      # ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181

  kafka-0:
    image: bitnami/kafka:2.8.0
    hostname: kafka-0
    # restart: always
    volumes:
    - 'kafka-data-0:/bitnami'
    ports:
    - '9092:9092'
    networks:
    - message-broker-network
    environment:
      KAFKA_BROKER_ID: 0
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
    - zookeeper

  kafka-1:
    image: bitnami/kafka:2.8.0
    hostname: kafka-1
    # restart: always
    volumes:
    - 'kafka-data-1:/bitnami'
    ports:
    - '9093:9092'
    networks:
    - message-broker-network
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
    - zookeeper

  kafka-2:
    image: bitnami/kafka:2.8.0
    hostname: kafka-2
    # restart: always
    volumes:
    - 'kafka-data-2:/bitnami'
    ports:
    - '9094:9092'
    networks:
    - message-broker-network
    environment:
      KAFKA_BROKER_ID: 2
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
    - zookeeper

  spring-kafka:
    hostname: spring-kafka
    image: spring-kafka
    environment:
      BOOTSTRAP_SERVERS: kafka-0:9092,kafka-1:9093,kafka-2:9094
    networks:
    - message-broker-network
    depends_on:
    - kafka-0

networks:
  message-broker-network:
    name: message-broker-network
    driver: bridge

volumes:
  zookeeper-data:
    driver: local
  kafka-data-0:
    driver: local
  kafka-data-1:
    driver: local
  kafka-data-2:
    driver: local